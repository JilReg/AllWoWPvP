let csvData=[];let selectedFilters=[];let showingScreenshotLightbox=true;let learnCurrentImgType="iconName";let learnCurrentIndex=-1;let learnProcessedIndices=[];let learnLeftSwipes=0;let learnRightSwipes=0;let learnStartX=0;let learnCurrentX=0;let learnStartY=0;let learnCurrentY=0;let learnIsDragging=false;let learnIsMouseDown=false;let learnIsHorizontalDrag=false;let spellsProcessedClasses=new Set;const spellsCurrentDisplayedSpells=new Map;if(window.location.pathname.endsWith("spells")||window.location.pathname.endsWith("learn")){loadFiltersFromLocalStorage();setSelectedFilters()}let isScreenSmall=window.innerWidth<=550;function isTouchDevice(){return"ontouchstart"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0}document.addEventListener("DOMContentLoaded",(async()=>{setupEventListeners();if(window.location.pathname.endsWith("spells")){if(csvData.length===0){csvData=await loadCSVData()}showSpellsSection()}if(window.location.pathname.endsWith("learn")){if(csvData.length===0){csvData=await loadCSVData()}showLearnSection()}}));function setupEventListeners(){if(window.location.pathname.endsWith("spells")||window.location.pathname.endsWith("learn")){document.getElementById("backdrop").addEventListener("click",toggleFilterMenu);document.getElementById("filterButton").addEventListener("click",toggleFilterMenu);document.getElementById("filterCloseButton").addEventListener("click",toggleFilterMenu);const checkboxes=document.querySelectorAll('#filterMenu input[type="checkbox"]');const checkboxClassAll=document.querySelector('#filterMenu input[value="CLASS_ALL"]');const checkboxCategoryAll=document.querySelector('#filterMenu input[value="CATEGORY_ALL"]');const checkboxCategoryDefensive=document.querySelector('#filterMenu input[value="CATEGORY_DEFENSIVE"]');const checkboxAddonAll=document.querySelector('#filterMenu input[value="ADDON_ALL"]');const checkboxAddonOmniBar=document.querySelector('#filterMenu input[value="ADDON_OMNIBAR"]');const checkboxSettingsCategories=document.querySelector('#filterMenu input[value="SETTINGS_CATEGORIES"]');const checkboxSettingsDescriptions=document.querySelector('#filterMenu input[value="SETTINGS_DESCRIPTIONS"]');checkboxes.forEach((checkbox=>{checkbox.addEventListener("change",(event=>handleCheckboxChange(event,checkboxes,checkboxClassAll,checkboxCategoryAll,checkboxCategoryDefensive,checkboxAddonAll,checkboxAddonOmniBar,checkboxSettingsCategories,checkboxSettingsDescriptions)))}));const toggleOption=document.querySelectorAll(".toggleOption");toggleOption.forEach((option=>{option.addEventListener("click",(()=>{toggleOption.forEach((opt=>opt.classList.remove("active")));option.classList.add("active")}))}));document.addEventListener("click",(event=>{if(event.target.classList.contains("cardScreenshot")&&showingScreenshotLightbox&&window.innerWidth>550){handleScreenshotClick(event)}}));document.getElementById("screenshotLightboxOverlay").addEventListener("click",closeScreenshotLightbox);document.addEventListener("keydown",handleLightboxKeydown)}if(window.location.pathname.endsWith("learn")){document.getElementById("buttonStartLearn").addEventListener("click",startLearning);const learnImageBackdrop=document.getElementById("learnImageBackdrop");if(isTouchDevice()){learnImageBackdrop.addEventListener("touchend",showCard)}else{learnImageBackdrop.addEventListener("click",showCard)}learnCardsContainerBackdrop.addEventListener("mousedown",startDrag);learnCardsContainerBackdrop.addEventListener("touchstart",startDrag);learnCardsContainerBackdrop.addEventListener("mousemove",moveDrag);learnCardsContainerBackdrop.addEventListener("touchmove",moveDrag);learnCardsContainerBackdrop.addEventListener("mouseup",endDrag);learnCardsContainerBackdrop.addEventListener("touchend",endDrag);learnCardsContainerBackdrop.addEventListener("mouseleave",endDrag)}}function showSpellsSection(){document.body.style.overflow="visible";document.body.style.userSelect="auto";loadCardsForFilters(selectedFilters)}function loadCardsForFilters(filters){const matchingSpells=getMatchingSpellsForFilters(filters);updateNoResultsText(matchingSpells.length);matchingSpells.sort(((a,b)=>Number(a.spellOrderIndex)-Number(b.spellOrderIndex)));const cardsContainer=document.getElementById("spellsCardsContainer");if(!cardsContainer){console.error("Error: cardsContainer element not found.");return}const visibleClasses=new Set;matchingSpells.forEach((spell=>{const spellID=spell.spellID;const spellClassType=spell.classType;const classColor=classColors[spellClassType.toLowerCase()]||"#AAAAAA";visibleClasses.add(spellClassType);if(!spellsProcessedClasses.has(spellClassType)){spellsProcessedClasses.add(spellClassType);createAndAppendClassDivider(spellClassType,classColor,cardsContainer)}if(spellsCurrentDisplayedSpells.has(spellID)){const card=spellsCurrentDisplayedSpells.get(spellID);card.classList.remove("hidden")}else{const card=createAndAppendCard(spell,classColor||"#AAAAAA",cardsContainer);const allCards=Array.from(cardsContainer.children);const insertBeforeElement=allCards.find((existingCard=>Number(existingCard.dataset.spellOrderIndex)>Number(spell.spellOrderIndex)));if(insertBeforeElement){cardsContainer.insertBefore(card,insertBeforeElement)}else{cardsContainer.appendChild(card)}spellsCurrentDisplayedSpells.set(spellID,card)}}));Array.from(spellsCurrentDisplayedSpells.keys()).forEach((spellID=>{const stillMatches=matchingSpells.some((spell=>spell.spellID===spellID));if(!stillMatches){const card=spellsCurrentDisplayedSpells.get(spellID);card.classList.add("hidden")}}));const allClassDividers=Array.from(cardsContainer.querySelectorAll(".classDivider"));allClassDividers.forEach((divider=>{const classType=divider.getAttribute("data-class-type");if(visibleClasses.has(classType)){divider.classList.remove("hidden")}else{divider.classList.add("hidden")}}));adjustScreenshotContainerHeight();console.log(`SPELLS SHOWN: ${matchingSpells.length}`)}function getMatchingSpellsForFilters(filters){const classFilters=filters.filter((filter=>filter.startsWith("CLASS_")));const categoryFilters=filters.filter((filter=>filter.startsWith("CATEGORY_")));const addonFilters=filters.filter((filter=>filter.startsWith("ADDON_")));const classCheckers=classFilters.map((filter=>filterMappings[filter])).filter(Boolean);const categoryCheckers=categoryFilters.map((filter=>filterMappings[filter])).filter(Boolean);const addonCheckers=addonFilters.map((filter=>filterMappings[filter])).filter(Boolean);return csvData.filter((spell=>{const matchesClass=classCheckers.some((check=>check(spell)));const matchesCategory=categoryCheckers.some((check=>check(spell)));const matchesAddon=addonCheckers.some((check=>check(spell)));return matchesClass&&matchesCategory&&matchesAddon}))}function updateNoResultsText(filteredSpellsAmount){const noFilterResultsText=document.getElementById("noFilterResultsText");if(filteredSpellsAmount>0){noFilterResultsText.classList.add("hidden");document.getElementsByTagName("footer")[0].classList.remove("hidden");if(window.location.pathname.endsWith("spells")){}if(window.location.pathname.endsWith("learn")){document.getElementById("learnSection").classList.remove("hidden");document.body.style.userSelect="";document.getElementById("learnSection").style.height="";document.body.style.height=""}}else{noFilterResultsText.classList.remove("hidden");document.getElementsByTagName("footer")[0].classList.add("hidden");if(window.location.pathname.endsWith("spells")){}if(window.location.pathname.endsWith("learn")){document.getElementById("learnSection").classList.add("hidden")}}}function getFilteredEntries(){const classFilters=selectedFilters.filter((filter=>filter.startsWith("CLASS_")));const categoryFilters=selectedFilters.filter((filter=>filter.startsWith("CATEGORY_")));const addonFilters=selectedFilters.filter((filter=>filter.startsWith("ADDON_")));const classCheckers=classFilters.map((filter=>filterMappings[filter])).filter(Boolean);const categoryCheckers=categoryFilters.map((filter=>filterMappings[filter])).filter(Boolean);const addonCheckers=addonFilters.map((filter=>filterMappings[filter])).filter(Boolean);return csvData.filter((entry=>{const matchesClass=classCheckers.length===0||classCheckers.some((check=>check(entry)));const matchesCategory=categoryCheckers.length===0||categoryCheckers.some((check=>check(entry)));const matchesAddon=addonCheckers.length===0||addonCheckers.some((check=>check(entry)));return matchesClass&&matchesCategory&&matchesAddon}))}function showLearnSection(){document.getElementsByTagName("footer")[0].classList.remove("hidden");updateNoResultsText(getMatchingSpellsForFilters(selectedFilters).length);footerAdjustmentOnLearnPage();document.getElementById("learnText").classList.remove("hidden");document.getElementById("learnModeChoice").classList.remove("hidden");document.getElementById("learnContent").classList.add("hidden")}function startLearning(){document.body.style.userSelect="none";document.getElementById("learnSection").style.height=`${window.innerHeight-50}px`;document.body.style.height=`${window.innerHeight-50}px`;document.getElementsByTagName("footer")[0].classList.add("hidden");const filteredEntries=getFilteredEntries();learnProcessedIndices=[];learnCurrentIndex=-1;learnLeftSwipes=0;learnRightSwipes=0;learnCurrentImgType=document.querySelector(".toggleOption.active").classList.contains("toggleOption1")?"iconName":"screenshotName";learnCurrentIndex=Math.floor(Math.random()*filteredEntries.length);learnProcessedIndices.push(learnCurrentIndex);document.getElementById("learnResultText").classList.add("hidden");document.getElementById("learnContent").classList.remove("hidden");document.getElementById("learnModeChoice").classList.add("hidden");document.getElementById("learnText").classList.add("hidden");showLearnImage()}function showLearnImage(){const filteredEntries=getFilteredEntries();const entry=filteredEntries[learnCurrentIndex];const learnImage=document.getElementById("learnImage");if(learnCurrentImgType==="screenshotName"&&entry.screenshotName){const baseName=entry.screenshotName.replace(/(\.[^/.]+)$/,"");const extension=entry.screenshotName.match(/(\.[^/.]+)$/)[0];const pictureElement=document.querySelector(".learnImageBackdrop").querySelector("picture");const webpSource=pictureElement.querySelector("source[type='image/webp']");const jpegSource=pictureElement.querySelector("source[type='image/jpeg']");const imgFallback=pictureElement.querySelector("img");webpSource.srcset=`\n    ../images/blizzard/spell-screenshots/${baseName}-@1x.webp 1x,\n    ../images/blizzard/spell-screenshots/${baseName}-@2x.webp 2x,\n    ../images/blizzard/spell-screenshots/${baseName}-@3x.webp 3x,\n    ../images/blizzard/spell-screenshots/${baseName}-@4x.webp 4x\n  `;jpegSource.srcset=`\n    ../images/blizzard/spell-screenshots/${baseName}-@1x${extension} 1x,\n    ../images/blizzard/spell-screenshots/${baseName}-@2x${extension} 2x,\n    ../images/blizzard/spell-screenshots/${baseName}-@3x${extension} 3x,\n    ../images/blizzard/spell-screenshots/${baseName}-@4x${extension} 4x\n  `;imgFallback.src=`${baseName}-@1x${extension}`;learnImageBackdrop.classList.add("screenshotMode");learnImageBackdrop.classList.remove("iconMode")}else{learnImage.srcset="";learnImage.src=learnCurrentImgType==="screenshotName"?"../images/blizzard/spell-screenshots/"+entry[learnCurrentImgType]:"../images/blizzard/spell-icons/"+entry[learnCurrentImgType];learnImageBackdrop.classList.add("iconMode");learnImageBackdrop.classList.remove("screenshotMode")}learnImage.alt=`${entry.name} ${learnCurrentImgType==="screenshotName"?"screenshot":"icon"}`;learnImage.classList.remove("hidden");document.getElementById("learnImageBackdrop").classList.remove("hidden");document.getElementById("learnCardsContainer").classList.add("hidden");document.getElementById("learnCardsContainerBackdrop").classList.add("hidden");document.getElementById("learnTextHeadline").innerText="Remember it?";document.getElementById("learnTextSwipeLeft").innerText="";document.getElementById("learnTextSwipeText").innerText="click to continue";document.getElementById("learnTextSwipeRight").innerText=""}function showCard(){const filteredEntries=getFilteredEntries();const entry=filteredEntries[learnCurrentIndex];const destinationElement=document.getElementById("learnCardsContainer");destinationElement.innerHTML="";destinationElement.classList.remove("hidden");document.getElementById("learnCardsContainerBackdrop").classList.remove("hidden");createAndAppendCard(entry,classColors[entry.classType.toLowerCase()],destinationElement);document.getElementById("learnImage").classList.add("hidden");document.getElementById("learnImageBackdrop").classList.add("hidden");document.getElementById("learnTextHeadline").innerText="Did you know it?";document.getElementById("learnTextSwipeLeft").innerText="← No";document.getElementById("learnTextSwipeText").innerText="swipe";document.getElementById("learnTextSwipeRight").innerText="Yes →"}const learnCardsContainerBackdrop=document.getElementById("learnCardsContainerBackdrop");const body=document.body;const learnTextContainer=document.getElementById("learnTextContainer");function startDrag(e){learnStartX=e.touches?e.touches[0].clientX:e.clientX;learnStartY=e.touches?e.touches[0].clientY:e.clientY;learnIsDragging=true;learnIsMouseDown=true;learnIsHorizontalDrag=false}function moveDrag(e){if(!learnIsDragging||!learnIsMouseDown)return;const moveX=(e.touches?e.touches[0].clientX:e.clientX)-learnStartX;const moveY=(e.touches?e.touches[0].clientY:e.clientY)-learnStartY;if(!learnIsHorizontalDrag){if(Math.abs(moveX)>Math.abs(moveY)&&Math.abs(moveX)>2){learnIsHorizontalDrag=true;document.body.style.overflow="hidden"}else if(Math.abs(moveY)>2){learnIsDragging=false;return}}if(learnIsHorizontalDrag){e.preventDefault();learnCurrentX=moveX;learnCardsContainerBackdrop.style.transform=`translateX(${learnCurrentX}px)`;if(learnCurrentX>0){const greenOpacity=Math.min(learnCurrentX/100,.6);body.style.backgroundColor=`rgba(22, 163, 74, ${greenOpacity})`}else if(learnCurrentX<0){const redOpacity=Math.min(-learnCurrentX/100,.6);body.style.backgroundColor=`rgba(220, 38, 38, ${redOpacity})`}}}function endDrag(){learnIsMouseDown=false;if(!learnIsDragging||!learnIsHorizontalDrag)return;learnIsDragging=false;document.body.style.overflow="";learnCardsContainerBackdrop.style.transition="transform 0.3s ease, background-color 0.3s ease";learnTextContainer.style.transition="opacity 0.3s ease";if(learnCurrentX>100){learnRightSwipes++;console.log(`Right Swipes: ${learnRightSwipes}`);learnCardsContainerBackdrop.style.transform=`translateX(100vw)`;learnTextContainer.style.opacity=0;setTimeout((()=>{proceedToNextLearnEntry();learnTextContainer.style.opacity=1}),300)}else if(learnCurrentX<-100){learnLeftSwipes++;console.log(`Left Swipes: ${learnLeftSwipes}`);learnTextContainer.style.opacity=0;learnCardsContainerBackdrop.style.transform=`translateX(-100vw)`;setTimeout((()=>{proceedToNextLearnEntry();learnTextContainer.style.opacity=1}),300)}else{learnCardsContainerBackdrop.style.transform="none";setTimeout((()=>{learnTextContainer.style.opacity=1;body.style.backgroundColor="transparent"}),0)}setTimeout((()=>{learnCardsContainerBackdrop.style.transition="none";learnTextContainer.style.transition="none";showingScreenshotLightbox=true}),300);learnCurrentX=0;learnCurrentY=0}function proceedToNextLearnEntry(){const container=document.getElementById("learnCardsContainerBackdrop");container.scrollTop=0;const filteredEntries=getFilteredEntries();if(filteredEntries.length===0){alert("No more entries match the selected filters. Please adjust your filters.");return}learnCardsContainerBackdrop.style.transition="none";learnCardsContainerBackdrop.style.transform="none";body.style.backgroundColor="transparent";if(learnProcessedIndices.length===filteredEntries.length){document.getElementById("learnImageBackdrop").classList.add("hidden");document.getElementById("learnCardsContainerBackdrop").classList.add("hidden");document.getElementById("learnResultText").classList.remove("hidden");const percentage=Math.floor(learnRightSwipes/(learnLeftSwipes+learnRightSwipes)*100);const percentageText=`${percentage}%`;const rangeStart=Math.min(Math.floor(percentage/5)*5,95);const rangeEnd=Math.min(rangeStart+5,100);const rangeText=`${rangeStart}-${rangeEnd}%`;document.getElementById("learnResultText").innerText=percentageText;plausible("Game End",{props:{source:"learn",section:"content",result:rangeText,classes:selectedFilters.filter((item=>item.startsWith("CLASS_"))).map((item=>item.replace("CLASS_",""))).join(", "),categories:selectedFilters.filter((item=>item.startsWith("CATEGORY_"))).map((item=>item.replace("CATEGORY_",""))).join(", "),addons:selectedFilters.filter((item=>item.startsWith("ADDON_"))).map((item=>item.replace("ADDON_",""))).join(", "),settings:selectedFilters.filter((item=>item.startsWith("SETTINGS_"))).map((item=>item.replace("SETTINGS_",""))).join(", ")}});document.getElementById("learnTextHeadline").innerText="Result";document.getElementById("learnTextSwipeLeft").innerText="";document.getElementById("learnTextSwipeText").innerText="known";document.getElementById("learnTextSwipeRight").innerText="";return}do{learnCurrentIndex=Math.floor(Math.random()*filteredEntries.length)}while(learnProcessedIndices.includes(learnCurrentIndex));learnProcessedIndices.push(learnCurrentIndex);showLearnImage()}function resetLearnMode(){learnProcessedIndices=[];learnCurrentIndex=-1;learnLeftSwipes=0;learnRightSwipes=0;document.getElementById("learnContent").classList.add("hidden");document.getElementById("learnModeChoice").classList.remove("hidden");document.getElementById("learnText").classList.remove("hidden");document.getElementById("learnImage").src="";document.getElementById("learnImageBackdrop").classList.add("hidden");document.getElementById("learnCardsContainerBackdrop").classList.add("hidden");document.body.style.backgroundColor="transparent"}function footerAdjustmentOnLearnPage(){const section=document.getElementById("learnSection");const footer=document.getElementsByTagName("footer")[0];const sectionRect=section.getBoundingClientRect();const footerRect=footer.getBoundingClientRect();if(sectionRect.bottom+footerRect.height<=window.innerHeight){footer.style.position="fixed";footer.style.bottom="0"}else{footer.style.position="static"}}function handleScreenshotClick(event){const screenshotLightbox=document.getElementById("screenshotLightbox");const screenshotLightboxImage=document.getElementById("screenshotLightboxImage");const imgSrc=event.target.currentSrc||event.target.src;screenshotLightboxImage.style.borderColor=event.target.dataset.borderColor;screenshotLightboxImage.src=imgSrc;screenshotLightboxImage.alt=event.target.alt;screenshotLightbox.classList.remove("hidden")}function closeScreenshotLightbox(){const screenshotLightbox=document.getElementById("screenshotLightbox");const screenshotLightboxImage=document.getElementById("screenshotLightboxImage");screenshotLightbox.classList.add("hidden");screenshotLightboxImage.src=""}function handleLightboxKeydown(event){if(event.key==="Escape"){closeScreenshotLightbox()}}function toggleFilterMenu(){const filterMenu=document.getElementById("filterMenu");const backdrop=document.getElementById("backdrop");const isHidden=filterMenu.classList.contains("hidden");filterMenu.classList.toggle("hidden",!isHidden);backdrop.classList.toggle("show",isHidden);backdrop.classList.toggle("hidden",!isHidden);if(isHidden){document.getElementById("filterButton").style.backgroundColor="var(--color-main)"}else{document.getElementById("filterButton").style.backgroundColor="var(--color-1)"}}function handleCheckboxChange(event,checkboxes,checkboxClassAll,checkboxCategoryAll,checkboxCategoryDefensive,checkboxAddonAll,checkboxAddonOmniBar,checkboxSettingsCategories,checkboxSettingsDescriptions){const clickedCheckbox=event.target;const addonCheckboxes=Array.from(checkboxes).filter((cb=>cb.value.startsWith("ADDON_")));if(clickedCheckbox.value.startsWith("ADDON_")){if(clickedCheckbox===checkboxAddonAll){if(checkboxAddonAll.checked){addonCheckboxes.forEach((cb=>cb.checked=true))}else{addonCheckboxes.forEach((cb=>cb.checked=false))}}else{if(!clickedCheckbox.checked){checkboxAddonAll.checked=false}else{checkboxAddonAll.checked=addonCheckboxes.every((cb=>cb===checkboxAddonAll||cb.checked))}}}const categoryCheckboxes=Array.from(checkboxes).filter((cb=>cb.value.startsWith("CATEGORY_")));if(clickedCheckbox.value.startsWith("CATEGORY_")){if(clickedCheckbox===checkboxCategoryAll){if(checkboxCategoryAll.checked){categoryCheckboxes.forEach((cb=>cb.checked=true))}else{categoryCheckboxes.forEach((cb=>cb.checked=false))}}else{if(!clickedCheckbox.checked){checkboxCategoryAll.checked=false}else{checkboxCategoryAll.checked=categoryCheckboxes.every((cb=>cb===checkboxCategoryAll||cb.checked))}}}const categoryDefensiveCheckboxes=Array.from(checkboxes).filter((cb=>cb.value.startsWith("CATEGORY_DEFENSIVE")));if(clickedCheckbox.value.startsWith("CATEGORY_DEFENSIVE")){if(clickedCheckbox===checkboxCategoryDefensive){if(checkboxCategoryDefensive.checked){categoryDefensiveCheckboxes.forEach((cb=>cb.checked=true))}else{categoryDefensiveCheckboxes.forEach((cb=>cb.checked=false))}}else{if(clickedCheckbox.checked){checkboxCategoryDefensive.checked=true}else{checkboxCategoryDefensive.checked=categoryDefensiveCheckboxes.some((cb=>cb!==checkboxCategoryDefensive&&cb.checked))}}}const classCheckboxes=Array.from(checkboxes).filter((cb=>cb.value.startsWith("CLASS_")));if(clickedCheckbox.value.startsWith("CLASS_")){if(clickedCheckbox===checkboxClassAll){if(checkboxClassAll.checked){classCheckboxes.forEach((cb=>cb.checked=true))}else{classCheckboxes.forEach((cb=>cb.checked=false))}}else{if(!clickedCheckbox.checked){checkboxClassAll.checked=false}else{checkboxClassAll.checked=classCheckboxes.every((cb=>cb===checkboxClassAll||cb.checked))}}}const addonOmnibarCheckboxes=Array.from(checkboxes).filter((cb=>cb.value.startsWith("ADDON_OMNIBAR")));if(clickedCheckbox.value.startsWith("ADDON_OMNIBAR")){if(clickedCheckbox===checkboxAddonOmniBar){if(checkboxAddonOmniBar.checked){addonOmnibarCheckboxes.forEach((cb=>cb.checked=true))}else{addonOmnibarCheckboxes.forEach((cb=>cb.checked=false))}}else{if(clickedCheckbox.checked){checkboxAddonOmniBar.checked=true}else{checkboxAddonOmniBar.checked=addonOmnibarCheckboxes.some((cb=>cb!==checkboxAddonOmniBar&&cb.checked))}}}if(clickedCheckbox.value==="SETTINGS_CATEGORIES"){const categoryTags=document.querySelectorAll(".cardCategoryTag");if(checkboxSettingsCategories.checked){categoryTags.forEach((tag=>tag.classList.remove("hidden")))}else{categoryTags.forEach((tag=>tag.classList.add("hidden")))}}if(clickedCheckbox.value==="SETTINGS_DESCRIPTIONS"){const cardsWithDescription=document.querySelectorAll(".cardTooltipDescription");const cardsWithDescriptionOriginal=document.querySelectorAll(".cardTooltipDescriptionOriginal");if(checkboxSettingsDescriptions.checked){cardsWithDescription.forEach((tag=>tag.classList.add("hidden")));cardsWithDescriptionOriginal.forEach((tag=>tag.classList.remove("hidden")))}else{cardsWithDescriptionOriginal.forEach((tag=>tag.classList.add("hidden")));cardsWithDescription.forEach((tag=>tag.classList.remove("hidden")))}}setSelectedFilters();updateNoResultsText(getMatchingSpellsForFilters(selectedFilters).length);if(clickedCheckbox.value!=="SETTINGS_CATEGORIES"&&clickedCheckbox.value!=="SETTINGS_DESCRIPTIONS"&&window.location.pathname.endsWith("learn")){if(!document.getElementById("learnSection").classList.contains("hidden")&&document.getElementById("learnModeChoice").classList.contains("hidden")){resetLearnMode()}}if(window.location.pathname.endsWith("spells")){loadCardsForFilters(selectedFilters)}}function setSelectedFilters(){const checkboxes=document.querySelectorAll('#filterMenu input[type="checkbox"]');selectedFilters=[];checkboxes.forEach((checkbox=>{if(checkbox.checked){selectedFilters.push(checkbox.value)}}));localStorage.setItem("selectedFilters",JSON.stringify(selectedFilters))}function loadFiltersFromLocalStorage(){const savedFilters=localStorage.getItem("selectedFilters");const checkboxes=document.querySelectorAll('#filterMenu input[type="checkbox"]');const checkboxSettingsCategories=document.querySelector('input[value="SETTINGS_CATEGORIES"]');const checkboxSettingsDescriptions=document.querySelector('input[value="SETTINGS_DESCRIPTIONS"]');if(savedFilters){selectedFilters=JSON.parse(savedFilters)}else{selectedFilters=Array.from(checkboxes).map((checkbox=>checkbox.value)).filter((value=>value!=="SETTINGS_CATEGORIES"&&value!=="SETTINGS_DESCRIPTIONS"));localStorage.setItem("selectedFilters",JSON.stringify(selectedFilters))}checkboxes.forEach((checkbox=>{checkbox.checked=selectedFilters.includes(checkbox.value)}));document.addEventListener("DOMContentLoaded",(()=>{const categoryTags=document.querySelectorAll(".cardCategoryTag");if(checkboxSettingsCategories.checked){categoryTags.forEach((tag=>tag.classList.remove("hidden")))}else{categoryTags.forEach((tag=>tag.classList.add("hidden")))}const cardsWithDescription=document.querySelectorAll(".cardTooltipDescription");const cardsWithDescriptionOriginal=document.querySelectorAll(".cardTooltipDescriptionOriginal");if(checkboxSettingsDescriptions.checked){cardsWithDescription.forEach((tag=>tag.classList.add("hidden")));cardsWithDescriptionOriginal.forEach((tag=>tag.classList.remove("hidden")))}else{cardsWithDescriptionOriginal.forEach((tag=>tag.classList.add("hidden")));cardsWithDescription.forEach((tag=>tag.classList.remove("hidden")))}}))}function createAndAppendClassDivider(classType,color="#FFFFFF",destinationElement){const classDividerContainer=document.querySelector(".classDividerTemplate").cloneNode(true);classDividerContainer.classList.remove("classDividerTemplate","hidden");let classDividerNameForFileName=classType.toLowerCase();if(classDividerNameForFileName==="demonhunter"){classDividerNameForFileName="demon-hunter"}else if(classDividerNameForFileName==="deathknight"){classDividerNameForFileName="death-knight"}const classDividerNameForOutput=classDividerNameForFileName.split("-").map((word=>word.charAt(0).toUpperCase()+word.slice(1))).join(" ");classDividerContainer.querySelector(".classDividerName").textContent=classDividerNameForOutput;classDividerContainer.querySelector(".classDividerName").style.color=color;classDividerContainer.querySelector(".classDividerCircleOuter").style.backgroundColor=color;if(classDividerNameForOutput==="Demon Hunter"){classDividerContainer.querySelector(".classDividerName").classList.add("dhExtraLeftMargin")}else if(classDividerNameForOutput==="Death Knight"){classDividerContainer.querySelector(".classDividerName").classList.add("dkExtraLeftMargin")}const classDividerIcon=classDividerContainer.querySelector(".classDividerCircleInner > picture");const classDividerIconWebpSource=classDividerIcon.querySelector("source[type='image/webp']");const classDividerIconJpegSource=classDividerIcon.querySelector("source[type='image/jpeg']");const classDividerIconImgFallback=classDividerIcon.querySelector("img");classDividerIconWebpSource.srcset=`\n    ../images/blizzard/class-icons/wow-class-icon-${classDividerNameForFileName}.webp\n  `;classDividerIconJpegSource.srcset=`\n   ../images/blizzard/class-icons/wow-class-icon-${classDividerNameForFileName}.jpg\n  `;classDividerIconImgFallback.src=`\n   ../images/blizzard/class-icons/wow-class-icon-${classDividerNameForFileName}.jpg\n  `;classDividerIconImgFallback.alt=`${classDividerNameForOutput} Icon`;classDividerContainer.setAttribute("data-class-type",classType);destinationElement.appendChild(classDividerContainer);return classDividerContainer}function createAndAppendCard(entry,color="#FFFFFF",destinationElement){const card=document.querySelector(".cardTemplate").cloneNode(true);card.classList.remove("cardTemplate","hidden");card.querySelector(".cardIcon").style.borderColor=color;card.querySelector(".cardTooltip").style.borderColor=color;card.querySelector(".cardScreenshotContainer").style.borderColor=color;card.querySelector(".cardTooltipSpellName").textContent=entry.name;card.querySelector(".cardTooltipCastTime").textContent=entry.castTime;card.querySelector(".cardTooltipRange").textContent=entry.range;card.querySelector(".cardTooltipCooldown").textContent=entry.cooldown;card.querySelector(".cardTooltipDescription").textContent=entry.description;card.querySelector(".cardTooltipDescriptionOriginal").textContent=entry.descriptionOriginal;const cardIcon=card.querySelector(".cardIcon");cardIcon.src="../images/blizzard/spell-icons/"+entry.iconName;cardIcon.alt=`${entry.name} icon`;const screenshotContainer=card.querySelector(".cardScreenshotContainer");const screenshotElement=card.querySelector(".cardScreenshot");screenshotElement.dataset.borderColor=color;if(entry.screenshotName){const baseName=entry.screenshotName.replace(/(\.[^/.]+)$/,"");const extension=entry.screenshotName.match(/(\.[^/.]+)$/)[0];const pictureElement=card.querySelector("picture:not(.cardCategoryTag > picture)");const webpSource=pictureElement.querySelector("source[type='image/webp']");const jpegSource=pictureElement.querySelector("source[type='image/jpeg']");const imgFallback=pictureElement.querySelector("img");webpSource.srcset=`\n    ../images/blizzard/spell-screenshots/${baseName}-@1x.webp 1x,\n    ../images/blizzard/spell-screenshots/${baseName}-@2x.webp 2x,\n    ../images/blizzard/spell-screenshots/${baseName}-@3x.webp 3x,\n    ../images/blizzard/spell-screenshots/${baseName}-@4x.webp 4x\n  `;jpegSource.srcset=`\n    ../images/blizzard/spell-screenshots/${baseName}-@1x${extension} 1x,\n    ../images/blizzard/spell-screenshots/${baseName}-@2x${extension} 2x,\n    ../images/blizzard/spell-screenshots/${baseName}-@3x${extension} 3x,\n    ../images/blizzard/spell-screenshots/${baseName}-@4x${extension} 4x\n  `;imgFallback.src="../images/blizzard/spell-screenshots/"+`${baseName}-@1x${extension}`;imgFallback.alt=entry.name+" screenshot"||"Screenshot";screenshotElement.onload=()=>{const selectedImage=screenshotElement.currentSrc||screenshotElement.src;screenshotContainer.style.setProperty("--setByJs",`url(${selectedImage})`)};screenshotElement.alt=`${entry.name} screenshot`;screenshotElement.style.display="block";const spellCategoryIcon=card.querySelector(".cardCategoryTag > picture");const spellCategoryIconWebpSource=spellCategoryIcon.querySelector("source[type='image/webp']");const spellCategoryIconJpegSource=spellCategoryIcon.querySelector("source[type='image/jpeg']");const spellCategoryIconImgFallback=spellCategoryIcon.querySelector("img");let spellCategoryIconFileName;switch(entry.type){case"aoeCC":spellCategoryIconFileName="aoe-cc";break;case"counterCC":spellCategoryIconFileName="counter-cc";break;case"raidDefensive":spellCategoryIconFileName="defensive";break;case"externalDefensive":spellCategoryIconFileName="defensive";break;default:spellCategoryIconFileName=entry.type}spellCategoryIconWebpSource.srcset=`\n    ../images/blizzard/spell-category-icons/wow-spell-category-icon-${spellCategoryIconFileName}.webp\n  `;spellCategoryIconJpegSource.srcset=`\n    ../images/blizzard/spell-category-icons/wow-spell-category-icon-${spellCategoryIconFileName}.jpg\n  `;spellCategoryIconImgFallback.src=`\n    ../images/blizzard/spell-category-icons/wow-spell-category-icon-${spellCategoryIconFileName}.jpg\n  `;const spellCategoryText=card.querySelector(".cardCategoryTagText");let spellCategoryName;switch(spellCategoryIconFileName){case"aoe-cc":spellCategoryName="AoE CC";break;case"cc":spellCategoryName="CC";break;case"counter-cc":spellCategoryName="Counter CC";break;default:spellCategoryName=spellCategoryIconFileName.charAt(0).toUpperCase()+spellCategoryIconFileName.slice(1)}spellCategoryText.textContent=`${spellCategoryName}`;spellCategoryIconImgFallback.alt=`Spell Category ${spellCategoryName} Icon`;card.querySelector(".cardCategoryTag").style.borderColor=color;card.querySelector(".cardCategoryTag img").style.borderColor=color}else{screenshotElement.style.display="none";const placeholder=document.createElement("div");placeholder.className="no-screenshot";placeholder.textContent="No screenshot available";screenshotContainer.appendChild(placeholder)}card.setAttribute("data-class-type",entry.classType);card.setAttribute("data-spell-order-index",entry.spellOrderIndex);card.setAttribute("data-spell-id",entry.spellID);destinationElement.appendChild(card);if(window.innerWidth>550){card.querySelector(".cardScreenshotContainer").style.height=`${card.querySelector(".cardTooltip").offsetHeight}px`}return card}function adjustScreenshotContainerHeight(){document.querySelectorAll(".card").forEach((card=>{const tooltip=card.querySelector(".cardTooltip");const screenshotContainer=card.querySelector(".cardScreenshotContainer");if(tooltip&&screenshotContainer){if(isScreenSmall){screenshotContainer.style.height="300px"}else{screenshotContainer.style.height=`${tooltip.offsetHeight}px`}}}))}function checkScreenWidth(){const currentScreenSmall=window.innerWidth<=550;if(currentScreenSmall!==isScreenSmall){isScreenSmall=currentScreenSmall;adjustScreenshotContainerHeight()}}function debounce(func,wait){let timeout;return function(...args){clearTimeout(timeout);timeout=setTimeout((()=>func.apply(this,args)),wait)}}function handleResizeEvent(){checkScreenWidth();if(window.location.pathname.endsWith("learn")&&!document.getElementById("learnSection").classList.contains("hidden")&&!document.getElementById("learnModeChoice").classList.contains("hidden")){footerAdjustmentOnLearnPage()}}window.addEventListener("resize",debounce(handleResizeEvent,100));async function loadCSVData(){const response=await fetch("data.csv");const data=await response.text();return data.split("\n").map(((row,index)=>{const columns=[];let start=0;let inQuotes=false;for(let i=0;i<=row.length;i++){const char=row[i];if(char==='"'){inQuotes=!inQuotes}else if((char===","||i===row.length)&&!inQuotes){let value=row.slice(start,i).trim();if(value.startsWith('"')&&value.endsWith('"')){value=value.slice(1,-1)}columns.push(value);start=i+1}}const[classType,type,name,spellID,omniCDDefault,skillCappedDefaults,OmniBar,OmniBarType,WeakAura,WeakAuraType,castTime,range,cooldown,iconName,screenshotName,description,descriptionOriginal]=columns;return{spellOrderIndex:index+1,classType:classType,type:type,name:name,spellID:spellID,omniCDDefault:omniCDDefault,skillCappedDefaults:skillCappedDefaults,OmniBar:OmniBar,OmniBarType:OmniBarType,WeakAura:WeakAura,WeakAuraType:WeakAuraType,castTime:castTime,range:range,cooldown:cooldown,iconName:iconName,screenshotName:screenshotName,description:description,descriptionOriginal:descriptionOriginal}}))}const filterMappings={CLASS_DEATHKNIGHT:spell=>spell.classType.toLowerCase()==="deathknight",CLASS_DEMONHUNTER:spell=>spell.classType.toLowerCase()==="demonhunter",CLASS_DRUID:spell=>spell.classType.toLowerCase()==="druid",CLASS_EVOKER:spell=>spell.classType.toLowerCase()==="evoker",CLASS_HUNTER:spell=>spell.classType.toLowerCase()==="hunter",CLASS_MAGE:spell=>spell.classType.toLowerCase()==="mage",CLASS_MONK:spell=>spell.classType.toLowerCase()==="monk",CLASS_PALADIN:spell=>spell.classType.toLowerCase()==="paladin",CLASS_PRIEST:spell=>spell.classType.toLowerCase()==="priest",CLASS_ROGUE:spell=>spell.classType.toLowerCase()==="rogue",CLASS_SHAMAN:spell=>spell.classType.toLowerCase()==="shaman",CLASS_WARLOCK:spell=>spell.classType.toLowerCase()==="warlock",CLASS_WARRIOR:spell=>spell.classType.toLowerCase()==="warrior",CATEGORY_AOECC:spell=>spell.type==="aoeCC",CATEGORY_CC:spell=>spell.type==="cc",CATEGORY_COUNTERCC:spell=>spell.type==="counterCC",CATEGORY_DEFENSIVE_SELF:spell=>spell.type==="defensive",CATEGORY_DEFENSIVE_TARGET:spell=>spell.type==="externalDefensive",CATEGORY_DEFENSIVE_GROUP:spell=>spell.type==="raidDefensive",CATEGORY_DISARM:spell=>spell.type==="disarm",CATEGORY_DISPEL:spell=>spell.type==="dispel",CATEGORY_FREEDOM:spell=>spell.type==="freedom",CATEGORY_HEAL:spell=>spell.type==="heal",CATEGORY_IMMUNITY:spell=>spell.type==="immunity",CATEGORY_INTERRUPT:spell=>spell.type==="interrupt",CATEGORY_MOVEMENT:spell=>spell.type==="movement",CATEGORY_OFFENSIVE:spell=>spell.type==="offensive",ADDON_WEAKAURAS:spell=>spell.WeakAura==="1",ADDON_OMNICD:spell=>spell.skillCappedDefaults==="1",ADDON_OMNIBAR_CC:spell=>spell.OmniBarType==="Crowd Control",ADDON_OMNIBAR_DEFENSIVE:spell=>spell.OmniBarType==="Defensives",ADDON_OMNIBAR_INTERRUPTS:spell=>spell.OmniBarType==="Interrupts"};const classColors={deathknight:"#C41E3A",demonhunter:"#A330C9",druid:"#FF7C0A",evoker:"#33937F",hunter:"#AAD372",mage:"#3FC7EB",monk:"#00FF98",paladin:"#F48CBA",priest:"#FFFFFF",rogue:"#FFF468",shaman:"#0070DD",warlock:"#8788EE",warrior:"#C69B6D"};